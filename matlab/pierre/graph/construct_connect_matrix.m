function [Mat, Dist] = construct_connect_matrix(FibName, StatsPath, Path, Pref, Outpath)
% usage : [MAT, DIST] = construct_connect_matrix(FIBERS, STATS_PATH, PATH_TO_LABELS, PREFIX, OUTPATH)
%
% INPUT :
% -------
%    FIBERS            : Name of the .fib files
%
%    STATS_PATH        : Path to stats file generated by the function
%       mris_anatomical_stats
%
%    PATH_TO_LABELS    : Path to directory containing labels in DTI space
%
%    PREFIX            : Prefix of labels name
%
%    OUTPATH           : Path to store outputs
%
% OUTPUT :
% --------
%    MAT               : Matrix of connectivity
%
%    DIST              : Length matrix of the fibers
%
% Pierre Besson, July 2009

if nargin ~= 5
    error('Invalid usage');
end

% Read stats file
Stats = textread(StatsPath, '%s', 'commentstyle', 'shell');
nROI = length(Stats) ./ 10;

Mat = zeros(nROI,nROI);
Dist = Mat;

for i = 1 : nROI
    tic; fprintf('PROCESSING LABEL %d\n', i);
    Lab_i = strcat(Path, '/', Pref, '_', int2str(i), '.nii.gz');
    Fib_i = f_readFiber_vtk_bin_mask(FibName, Lab_i);
    Fibers_i = strcat(Outpath, '/Fibers_', int2str(i), '.vtk');
    save_tract_vtk(Fib_i, Fibers_i, 'BINARY');
    for j = 1 : i-1
        Lab_j = strcat(Path, '/', Pref, '_', int2str(j), '.nii.gz');
        Fib_ij = tracts_select(Fib_i, Lab_j);
        % Fibers_ij = strcat(Outpath, '/Fibers_', int2str(i), '_', int2str(j), '.vtk');
        % save_tract_vtk(Fib_ij, Fibers_ij, 'BINARY');
        Mat(i,j) = Fib_ij.nFiberNr;
        Mat(j,i) = Mat(i,j);
        if Mat(i,j) ~= 0
            % Works if connection between the two ROIs
            Dist(i,j) = mean(cat(Fib_ij.fiber.nFiberLength));
            Dist(j,i) = Dist(i,j);
        else
            % If no connection, set dist to 0
            Dist(i,j) = 0;
            Dist(j,i) = 0;
        end
    end
    toc
end