function T = train_dt(init, global_lesion, global_control)
% 
% train_dt trains Decision Trees for FCD detection
% 
% usage :  train_dt(init, global_lesion, global_control))
% 
% INPUTS :
%       init : initialization structure - generated by initvar.m and
%       generate_variables.m
%       global_lesion : lesional tissue matrix
%       global_control : healthy tissue matrix
%
% OUTPUTS : 
%       T : Trained Decision Trees
%
%
% For Automatic Detection of Focal Cortical Dysplasia
% Tanguy Hamel @ CHRU Lille, 2012



%%
% For Automatic Detection of Focal Cortical Dysplasia
% Tanguy Hamel @ CHRU Lille, 2012


h = waitbar(0,'creating decision tress');
steps = init.nbdt;

for w = 1 : init.nbdt
    
    waitbar(w / steps)
    disp(strcat('decision tree',num2str(w),'/',num2str(init.nbdt)))
    
    vertex_alea=[];
    
    % tirage aléatoire de init.nbles vertex lésionels
    global_lesion=global_lesion(:,randperm(size(global_lesion,2)));
    vertex_alea=[vertex_alea global_lesion(:,1:init.nbles)];
    
    % tirage aléatoire de init.nbhea vertex sains
    global_control=global_control(:,randperm(size(global_control,2)));
    vertex_alea=[vertex_alea global_control(:,1:init.nbhea)];
    
    O(1:init.nbles)=1; O(init.nbles+1:init.nbles+init.nbhea)=0;
    
    
    T{w}= classregtree(vertex_alea', O','name',{init.features{:} init.features_flair{:}}, 'prune', 'on');
end

close(h)
