function fin_net = train_nn(init, global_lesion, global_control)
% 
% train_nn trains Neural Networks for FCD detection
% 
% usage :  train_nn(init, global_lesion, global_control))
% 
% INPUTS :
%       init : initialization structure - generated by initvar.m and
%       generate_variables.m
%       global_lesion : lesional tissue matrix
%       global_control : healthy tissue matrix
%
% OUTPUTS : 
%       T : Trained Neural Networks
%
%
% For Automatic Detection of Focal Cortical Dysplasia
% Tanguy Hamel @ CHRU Lille, 2012



%%
% For Automatic Detection of Focal Cortical Dysplasia
% Tanguy Hamel @ CHRU Lille, 2012

h = waitbar(0, 'please wait : training networks');
steps = init.nbnn;

for w = 1 : init.nbnn
    
    waitbar(w/steps)
    
    vertex_alea=[];
    
    % tirage aléatoire de init.nbles vertex lésionels
    global_lesion=global_lesion(:,randperm(size(global_lesion,2)));
    vertex_alea=[vertex_alea global_lesion(:,1:init.nbles)];
    
    % tirage aléatoire de init.nbhea vertex sains
    global_control=global_control(:,randperm(size(global_control,2)));
    vertex_alea=[vertex_alea global_control(:,1:init.nbhea)];
    
    vertex_alea = double(vertex_alea);
    
    lesion = zeros(2,init.nbles + init.nbhea);
    lesion(1,init.nbles+1:init.nbles+init.nbhea)=1;
    lesion(2,1:init.nbles)=1;
    
    
    
    net = newff(vertex_alea,lesion, [6 6]);
    [net,tr,Y,E] = train(net,vertex_alea,lesion);
    
    
    fin_net{w}=net;
    
    
end

%     if init.pcnn == 1
%         class.fin_net = fin_net;
%     elseif init.pcnn > 1
%         disp('max value for init.pcnn = 1')
%         class.fin_net = fin_net;
%     else
%         class.fin_net = {};
%         nn_error(2,1:init.nbnn)=1:init.nbnn;
%         B=sortrows(nn_error',1)';
%         nb = round(init.nbnn * init.pcnn);
%         for i = 1 : nb
%             class.fin_net{i} = fin_net{B(2,i)};
%         end
%
%     end

close(h)