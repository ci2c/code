function normalizationcontrol(init)

% 
% Normalize control data & save template for patient normalization
% 
% usage : normalizationcontrol(init)
%
% INPUT : init : initialization structure - generated by initvar.m &
%                generate_variables.m
%
% it creates files into template_dir and control_dir
% 
% 
% For Automatic Detection of Focal Cortical Dysplasia
% Tanguy Hamel @ CHRU Lille, 2012


%%
% For Automatic Detection of Focal Cortical Dysplasia
% Tanguy Hamel @ CHRU Lille, 2012



%% Verifications

if ~strcmp(class(init),'struct')
    warning('input for normalizationcontrol.m : init need to be a structure')
    return
end


%%
%
%Normalization for T1 & pet
%

for k=1:size(init.features,2)
    
    %Normalization of not blured data
    
    
    disp(strcat('normalize for :',init.features{k}));
    
    
    
    %% reading data on control for normalization
    
    dat = strcat(init.cont_SD , '/' , init.ref , '/epilepsy/lh.fsaverage.' , init.features{k} , '.mgh');
    if exist(dat)==0
        disp(strcat('need the file : ',dat))
    else
        temp_left = SurfStatReadData(dat);
    end
    clear dat
    dat = strcat(init.cont_SD , '/' , init.ref , '/epilepsy/rh.fsaverage.' , init.features{k} , '.mgh');
    if exist(dat)==0
        disp(strcat('need the file : ',dat))
    else
        temp_right = SurfStatReadData(dat);
    end
    clear dat
    
    
    
    
    %% reading data from other control subjects
    
    List_lh = arrayfun(@(i) strcat(init.cont_SD , '/' , i , '/epilepsy/lh.fsaverage.' , init.features{k} , '.mgh'),init.cont)';
    List_rh = arrayfun(@(i) strcat(init.cont_SD , '/' , i , '/epilepsy/rh.fsaverage.' , init.features{k} , '.mgh'),init.cont)';
    
    if all(cellfun(@(i) exist(i),List_lh)~=0) && all(cellfun(@(i) exist(i),List_rh)~=0)
        F_left = SurfStatReadData(List_lh);
        F_right = SurfStatReadData(List_rh);
    else
        disp('problem in the control file')
    end
    
    %% data normalization
    
    [F_left_norm, F_right_norm] = norma(F_left, F_right, temp_left, temp_right);
    
    
    
    %%
    
    for stp = 1 : 2
        
        temp_left=mean(F_left_norm,1);
        temp_right=mean(F_right_norm,1);
        
        [F_left_norm, F_right_norm] = norma(F_left_norm, F_right_norm, temp_left, temp_right);
        
    end
    
    savetemplate(init,F_left_norm, F_right_norm, init.features{k}, 0, 0)
    savefeature(init, F_left_norm, F_right_norm, init.features{k}, 0, 0)
    
    %Normalization for blur 5 - 10 - 15 - 20
    
    
    for i = 1:length(init.blur)
        
        
        %% reading data on control for normalization
        
        dat = strcat(init.cont_SD , '/' , init.ref , '/epilepsy/lh.fwhm',num2str(init.blur(i)),'.fsaverage.' , init.features{k} , '.mgh');
        if exist(dat)==0
            disp(strcat('need the file : ',dat))
        else
            temp_left = SurfStatReadData(dat);
        end
        clear dat
        dat = strcat(init.cont_SD , '/' , init.ref , '/epilepsy/rh.fwhm',num2str(init.blur(i)),'.fsaverage.' , init.features{k} , '.mgh');
        if exist(dat)==0
            disp(strcat('need the file : ',dat))
        else
            temp_right = SurfStatReadData(dat);
        end
        clear dat
        
        
        
        
        %% reading data from other control subjects
        
        List_lh = arrayfun(@(c) strcat(init.cont_SD , '/' , c , '/epilepsy/lh.fwhm',num2str(init.blur(i)),'.fsaverage.' , init.features{k} , '.mgh'),init.cont)';
        List_rh = arrayfun(@(c) strcat(init.cont_SD , '/' , c , '/epilepsy/rh.fwhm',num2str(init.blur(i)),'.fsaverage.' , init.features{k} , '.mgh'),init.cont)';
        
        if all(cellfun(@(i) exist(i),List_lh)~=0) && all(cellfun(@(i) exist(i),List_rh)~=0)
            F_left = SurfStatReadData(List_lh);
            F_right = SurfStatReadData(List_rh);
        else
            disp('problem in the control file')
        end
        
        %% data normalization
        
        [F_left_norm, F_right_norm] = norma(F_left, F_right, temp_left, temp_right);
        
        
        
        %%
        
        for stp = 1 : 2
            
            temp_left=mean(F_left_norm,1);
            temp_right=mean(F_right_norm,1);
            
            [F_left_norm, F_right_norm] = norma(F_left_norm, F_right_norm, temp_left, temp_right);
            
        end
        savetemplate(init,F_left_norm, F_right_norm, init.features{k}, init.blur(i), 0)
        savefeature(init, F_left_norm, F_right_norm, init.features{k}, init.blur(i), 0)
        
    end
    
end


%%
%
%Normalization for FLAIR
%



for k=1:size(init.features_flair,2)
    
    
    %Normalization of not blured data
    
    
    disp(strcat('normalize for :',init.features_flair{k}));
    
    
    %% reading data on control for normalization
    
    dat = strcat(init.cont_SD , '/' , init.ref , '/epilepsy/lh.fsaverage.' , init.features_flair{k} , '.mgh');
    if exist(dat)==0
        disp(strcat('need the file : ',dat))
    else
        temp_left = SurfStatReadData(dat);
    end
    clear dat
    dat = strcat(init.cont_SD , '/' , init.ref , '/epilepsy/rh.fsaverage.' , init.features_flair{k} , '.mgh');
    if exist(dat)==0
        disp(strcat('need the file : ',dat))
    else
        temp_right = SurfStatReadData(dat);
    end
    clear dat
    
    
    
    
    %% reading data from other control subjects
    
    List_lh = arrayfun(@(i) strcat(init.cont_SD , '/' , i , '/epilepsy/lh.fsaverage.' , init.features_flair{k} , '.mgh'),init.cont)';
    List_rh = arrayfun(@(i) strcat(init.cont_SD , '/' , i , '/epilepsy/rh.fsaverage.' , init.features_flair{k} , '.mgh'),init.cont)';
    
    if all(cellfun(@(i) exist(i),List_lh)~=0) && all(cellfun(@(i) exist(i),List_rh)~=0)
        F_left = SurfStatReadData(List_lh);
        F_right = SurfStatReadData(List_rh);
    else
        disp('problem in the control file')
    end
    
    %% data normalization
    
    [F_left_norm, F_right_norm] = norma(F_left, F_right, temp_left, temp_right);
    
    
    
    %%
    
    for stp = 1 : 2
        
        temp_left=mean(F_left_norm,1);
        temp_right=mean(F_right_norm,1);
        
        [F_left_norm, F_right_norm] = norma(F_left_norm, F_right_norm, temp_left, temp_right);
        
    end
    
    savetemplate(init,F_left_norm, F_right_norm, init.features_flair{k}, 0, 1)
    savefeature(init, F_left_norm, F_right_norm, init.features_flair{k}, 0, 1)
    
    
    %Normalization for blur 5 - 10 - 15 - 20
    
    
    for i = 1:length(init.blur)
        
       
        %% reading data on control for normalization
        
        dat = strcat(init.cont_SD , '/' , init.ref , '/epilepsy/lh.fwhm',num2str(init.blur(i)),'.fsaverage.' , init.features_flair{k} , '.mgh');
        if exist(dat)==0
            disp(strcat('need the file : ',dat))
        else
            temp_left = SurfStatReadData(dat);
        end
        clear dat
        dat = strcat(init.cont_SD , '/' , init.ref , '/epilepsy/rh.fwhm',num2str(init.blur(i)),'.fsaverage.' , init.features_flair{k} , '.mgh');
        if exist(dat)==0
            disp(strcat('need the file : ',dat))
        else
            temp_right = SurfStatReadData(dat);
        end
        clear dat
        
        
        
        
        %% reading data from other control subjects
        
        List_lh = arrayfun(@(c) strcat(init.cont_SD , '/' , c , '/epilepsy/lh.fwhm',num2str(init.blur(i)),'.fsaverage.' , init.features_flair{k} , '.mgh'),init.cont)';
        List_rh = arrayfun(@(c) strcat(init.cont_SD , '/' , c , '/epilepsy/rh.fwhm',num2str(init.blur(i)),'.fsaverage.' , init.features_flair{k} , '.mgh'),init.cont)';
        
        if all(cellfun(@(i) exist(i),List_lh)~=0) && all(cellfun(@(i) exist(i),List_rh)~=0)
            F_left = SurfStatReadData(List_lh);
            F_right = SurfStatReadData(List_rh);
        else
            disp('problem in the control file')
        end
        
        %% data normalization
        
        [F_left_norm, F_right_norm] = norma(F_left, F_right, temp_left, temp_right);
        
        
        
        %%
        
        for stp = 1 : 2
            
            temp_left=mean(F_left_norm,1);
            temp_right=mean(F_right_norm,1);
            
            [F_left_norm, F_right_norm] = norma(F_left_norm, F_right_norm, temp_left, temp_right);
            
        end
        savetemplate(init,F_left_norm, F_right_norm, init.features_flair{k}, init.blur(i), 1)
        savefeature(init, F_left_norm, F_right_norm, init.features_flair{k}, init.blur(i), 1)
        
    end
    
end
