#!/bin/bash

if [ $# -lt 3 ]
then
	echo "Usage: do_cmd timer touch_file command_line"
	echo ""
	echo "  timer          :  Delay (in second) to wait before sending the job (at least 1)"
	echo "  touch_file     :  Name of the touch file"
	echo "  command_line   :  Command line to execute"
	exit 1
fi

touch_file=$2
if [ ! -f ${touch_file} ]
then
	# Get Number of processors
	N_proc=`cat /proc/cpuinfo | grep processor | wc -l` # Number of processors
	# Get total Mem
	Mem=`free -m | grep Mem | awk  '{print $2}'`
	
	# Wait
	sleep $1
	
	# Get cpu load
	l_command=""
	l_sep=""
	l_index=3
	cpu_use=`uptime | cut -dl -f2 | cut -d: -f2 | cut -d, -f1`
	echo "CPU_USAGE : ${cpu_use} / ${N_proc}"
	
	# Get mem load
	mem_use=`free -m | grep / | awk  '{print $3}'`
	mem_use=`echo "scale=0; (100 * ${mem_use}) / ${Mem}" | bc -l`
	echo "MEM_USAGE : ${mem_use} / 100"


	# Loop
	while [ ! `echo "${cpu_use} < ${N_proc}" | bc -l` -eq 1 -o `echo "((${mem_use} / ${cpu_use}) * (${cpu_use}+1)) > 120" | bc -l` -eq 1 -a `echo "${cpu_use} > 0.5" | bc -l` -eq 1 ]
	do
		sleep $1
		sleep $1
		echo "******  System busy  ******"
		echo "SysLoad = $cpu_use / ${N_proc}"
		echo "MemLoad = $mem_use / 100"
		cpu_use=`uptime | cut -dl -f2 | cut -d: -f2 | cut -d, -f1`
		mem_use=`free -m | grep / | awk  '{print $3}'`
		mem_use=`echo "scale=0; (100 * ${mem_use}) / ${Mem}" | bc -l`
	done
	while [ ${l_index} -le $# ]; do
			eval arg=\${$l_index}
			l_command="${l_command}${l_sep}${arg}"
			l_sep=" "
			l_index=$[${l_index}+1]
	done
	echo
	
	# Execute when cpu load is low enough
	echo "-------------------------------------------------------------------------------"
	echo "${l_command}"
	echo "-------------------------------------------------------------------------------"
	${l_command}
	touch ${touch_file}
else
	echo "Step Done"
fi
