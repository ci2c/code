#!/bin/bash

if [ $# -lt 3 ]
then
	echo ""
	echo "Usage: Process_all_steps_Connectivity.sh  FS_dir  subject  DTI_4D  Fibers  output_dir"
	echo ""
	echo "  FS_dir               : Path to FS output directory (equivalent to SUBJECTS_DIR)"
	echo "  subject              : Subject ID"
	echo "  DTI_4D               : 4D DTI image after eddy_correction (.nii or .nii.gz)"
	echo "  Fibers               : File .fib generated by MedINRIA"
	echo "  output_dir           : Path to output directory"
	echo ""
	echo "Usage: Process_all_steps_Connectivity.sh  FS_dir  subject  DTI_4D  Fibers  output_dir"
	echo ""
	exit 1
fi

# Variables management
FSdir=$1
Subj=$2
DTI=$3
Fib=$4
Outdir=$5
SUBJECTS_DIR=${FSdir}

# Check and create output directories
if [ ! -d ${Outdir}  ]
then
	echo
	echo "*********************"
	echo "mkdir ${Outdir}"
	mkdir ${Outdir}
	echo "*********************"
	echo
fi

if [ ! -d ${Outdir}/labels  ]
then
	echo
	echo "*********************"
	echo "mkdir ${Outdir}/labels"
	mkdir ${Outdir}/labels
	echo "*********************"
	echo
fi

if [ ! -d ${Outdir}/fibers  ]
then
	echo
	echo "*********************"
	echo "mkdir ${Outdir}/fibers"
	mkdir ${Outdir}/fibers
	echo "*********************"
	echo
fi

if [ -e ${Outdir}/Connectivity_process.log ]
then
	rm -f ${Outdir}/Connectivity_process.log
fi

# Step 1. Surface parcellation [matlab]
echo "--------------------------------------------------"
echo "Parcellating surface"
matlab -nodisplay <<EOF >> ${Outdir}/Connectivity_process.log
parcellateSurfaceTri2('${FSdir}', {'${Subj}'}, 'tri');
EOF
echo
 
# Step 2. Interpolate surface to volume [matlab]
echo "--------------------------------------------------"
echo "Interpolate surface to volume"
matlab -nodisplay <<EOF >> ${Outdir}/Connectivity_process.log
inter_vox_vert2('${FSdir}/${Subj}/mri/T1.mgz', '${FSdir}/${Subj}/surf/lh.white','${FSdir}/${Subj}/label/lh.tri.annot', '${Outdir}/${Subj}_label.mgz');
EOF
echo
 
# Step 3. Resample label map in DTI space [Linux]
echo "--------------------------------------------------"
echo "Resample label maps in DTI space"
echo "Create_Connectivity_M.sh ${Outdir}/${Subj}_label.mgz ${FSdir}/${Subj}/mri/T1.mgz ${DTI} ${Outdir}/labels/"
Create_Connectivity_M.sh ${Outdir}/${Subj}_label.mgz ${FSdir}/${Subj}/mri/T1.mgz ${DTI} ${Outdir}/labels/ >> ${Outdir}/Connectivity_process.log
echo

# Step 4. Compute stats of surface labels [linux]
echo "--------------------------------------------------"
echo "Compute stats of surface labels"
echo "mris_anatomical_stats -mgz -f ${Outdir}/lh.tri.stats -b -a ${FSdir}/${Subj}/label/lh.tri.annot -c ${FSdir}/${Subj}/label/tri.annot.ctab ${Subj} lh"
mris_anatomical_stats -mgz -f ${Outdir}/lh.tri.stats -b -a ${FSdir}/${Subj}/label/lh.tri.annot -c ${FSdir}/${Subj}/label/tri.annot.ctab ${Subj} lh >> ${Outdir}/Connectivity_process.log
echo

# Step 4 bis. Keep only local maximum & threshold labels [matlab]
echo "--------------------------------------------------"
echo "Keep only local maximum & threshold labels"
matlab -nodisplay <<EOF >> ${Outdir}/Connectivity_process.log
cut_labels('${Outdir}/labels/', 'Label', '${FSdir}/${Subj}/label/lh.tri.annot', 0.3, 'Label_cut');
EOF
echo

# Step 5. Compute fiber sharing, distance matrices & connectivity matrix ; Save the data [matlab]
echo "--------------------------------------------------"
echo "Compute fiber sharing, distance matrices & connectivity matrix ; Save the data"
matlab -nodisplay <<EOF >> ${Outdir}/Connectivity_process.log
[Mat, Dist] = construct_connect_matrix('${Fib}', '${Outdir}/lh.tri.stats', '${Outdir}/labels/', 'Label_cut', '${Outdir}/fibers');
Mat_w = weight_connect_coeff(Mat, '${Outdir}/lh.tri.stats', Dist);
save ${Outdir}/Connectivity_data Mat Dist Mat_w
EOF
echo
